generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                           String    @id @unique
  email                        String    @unique
  File                         File[]
  Message                      Message[]
  lemonSqueezyCustomerId       String?   @unique @map(name: "lemonSqueezy_customer_id")
  lemonSqueezySubscriptionId   String?   @unique @map(name: "lemonSqueezy_subscription_id")
  lemonSqueezyPriceId          String?   @map(name: "lemonSqueezy_price_id")
  lemonSqueezyCurrentPeriodEnd DateTime? @map(name: "lemonSqueezy_current_period_end")
}

enum UploadStatus {
  PENDING
  PROCESSING
  FAILED
  SUCCESS
}

model File {
  id           String       @id @default(cuid())
  name         String
  uploadStatus UploadStatus @default(PENDING)
  url          String
  key          String
  messages     Message[]
  createdAt    DateTime     @default(now())
  updatedAt    DateTime     @updatedAt
  User         User?        @relation(fields: [userId], references: [id])
  userId       String?
  type         String
}

model Message {
  id            String   @id @default(cuid())
  text          String   @db.Text()
  isUserMessage Boolean
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  User   User?   @relation(fields: [userId], references: [id])
  userId String?
  File   File?   @relation(fields: [fileId], references: [id])
  fileId String?
}
